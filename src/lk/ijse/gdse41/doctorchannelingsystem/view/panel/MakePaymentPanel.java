/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.gdse41.doctorchannelingsystem.view.panel;

import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import lk.ijse.gdse41.doctorchannelingsystem.controller.ControllerFactory;
import lk.ijse.gdse41.doctorchannelingsystem.controller.custom.PaymentController;
import lk.ijse.gdse41.doctorchannelingsystem.controller.custom.QueryController;
import lk.ijse.gdse41.doctorchannelingsystem.dao.db.ConnectionFactory;
import lk.ijse.gdse41.doctorchannelingsystem.dto.AppointmentSearchDTO;
import lk.ijse.gdse41.doctorchannelingsystem.dto.PaymentDTO;
import lk.ijse.gdse41.doctorchannelingsystem.idgenarate.IDGenarator;
import lk.ijse.gdse41.doctorchannelingsystem.jasper.main.JasperReportViewer;
import lk.ijse.gdse41.doctorchannelingsystem.jasper.main.StartUp;
import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;

/**
 *
 * @author Binura Salindra
 */
public class MakePaymentPanel extends javax.swing.JPanel {
    private QueryController ctrlQuery;
    private PaymentController ctrlPayment;

    /**
     * Creates new form PaymentPanel
     */
    public MakePaymentPanel() {
        initComponents();
        ctrlQuery=(QueryController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.QUERY);
        ctrlPayment=(PaymentController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.PAYMENT);
        LoadAppointmentID();
        genaratePaymentID();
        disableDates();
        btnPay.setEnabled(false);
    }
    private void LoadAppointmentID(){
        ArrayList<String> allAppointmentIDs = null;
        try {
            allAppointmentIDs = ctrlQuery.getAllAppointmentId();
        } catch (Exception ex) {
            Logger.getLogger(MakeNewAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (int i = 0; i < allAppointmentIDs.size(); i++){
            cmbAppID.addItem(allAppointmentIDs.get(i));
        }
    }
    private void genaratePaymentID(){
        try {
            txtPaymentID.setText(IDGenarator.getNewID("Payment","PaymentID", "B"));
        } catch (SQLException ex) {
            Logger.getLogger(MakePaymentPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MakePaymentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void disableDates(){
        Calendar c1=Calendar.getInstance();
        c1.add(Calendar.DATE, 0);
        datePicker.getMonthView().setLowerBound(c1.getTime());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTopic = new javax.swing.JLabel();
        lblAppointmentID = new javax.swing.JLabel();
        lblDoctorName = new javax.swing.JLabel();
        lblApDate = new javax.swing.JLabel();
        lblPatientID = new javax.swing.JLabel();
        lblPatientName = new javax.swing.JLabel();
        lblPaymentID = new javax.swing.JLabel();
        lblPaymentDate = new javax.swing.JLabel();
        lblFullCharge = new javax.swing.JLabel();
        txtApDate = new javax.swing.JTextField();
        txtDoctorName = new javax.swing.JTextField();
        txtPatientID = new javax.swing.JTextField();
        txtPatientName = new javax.swing.JTextField();
        txtPaymentID = new javax.swing.JTextField();
        txtFullCharge = new javax.swing.JTextField();
        btnPay = new org.jdesktop.swingx.JXButton();
        lblSpeciality = new javax.swing.JLabel();
        txtSpType = new javax.swing.JTextField();
        lblApNo = new javax.swing.JLabel();
        lblTimeSlot = new javax.swing.JLabel();
        txtApNO = new javax.swing.JTextField();
        txtTimeSlot = new javax.swing.JTextField();
        cmbAppID = new com.jidesoft.swing.AutoCompletionComboBox();
        datePicker = new org.jdesktop.swingx.JXDatePicker();

        setBackground(new java.awt.Color(255, 255, 255));

        lblTopic.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblTopic.setText("Make New Payment");

        lblAppointmentID.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblAppointmentID.setText("Appointment ID :");

        lblDoctorName.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblDoctorName.setText("Dcotor Name :");

        lblApDate.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblApDate.setText("Appointment Date :");

        lblPatientID.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblPatientID.setText("Patient ID :");

        lblPatientName.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblPatientName.setText("Patient Name :");

        lblPaymentID.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblPaymentID.setText("Payment ID :");

        lblPaymentDate.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblPaymentDate.setText("Payment Date :");

        lblFullCharge.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblFullCharge.setText("Full Charge :");

        txtApDate.setFocusable(false);

        txtDoctorName.setFocusable(false);

        txtPatientID.setFocusable(false);

        txtPatientName.setFocusable(false);

        txtPaymentID.setFocusable(false);

        txtFullCharge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFullChargeActionPerformed(evt);
            }
        });

        btnPay.setText("Pay");
        btnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayActionPerformed(evt);
            }
        });

        lblSpeciality.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblSpeciality.setText("Speciality :");

        txtSpType.setFocusable(false);

        lblApNo.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblApNo.setText("Appointment No :");

        lblTimeSlot.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblTimeSlot.setText("Time Slot :");

        txtApNO.setFocusable(false);

        txtTimeSlot.setFocusable(false);

        cmbAppID.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbAppIDItemStateChanged(evt);
            }
        });

        datePicker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datePickerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPatientID)
                    .addComponent(lblPatientName)
                    .addComponent(lblPaymentID)
                    .addComponent(lblTopic, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnPay, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblApDate)
                                    .addComponent(lblDoctorName)
                                    .addComponent(lblFullCharge)
                                    .addComponent(lblAppointmentID)
                                    .addComponent(lblPaymentDate))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtDoctorName, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                                    .addComponent(txtApDate, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                                    .addComponent(txtSpType, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                                    .addComponent(txtPatientID, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                                    .addComponent(txtPatientName, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                                    .addComponent(txtPaymentID, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                                    .addComponent(txtFullCharge, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                                    .addComponent(cmbAppID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(datePicker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblApNo)
                            .addComponent(lblTimeSlot))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTimeSlot, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtApNO, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblSpeciality))
                .addContainerGap(300, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTopic)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAppointmentID)
                    .addComponent(lblApNo)
                    .addComponent(txtApNO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbAppID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblApDate)
                    .addComponent(txtApDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTimeSlot)
                    .addComponent(txtTimeSlot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDoctorName)
                    .addComponent(txtDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSpeciality)
                    .addComponent(txtSpType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientID)
                    .addComponent(txtPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientName)
                    .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPaymentID)
                    .addComponent(txtPaymentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPaymentDate)
                    .addComponent(datePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFullCharge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFullCharge))
                .addGap(46, 46, 46)
                .addComponent(btnPay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(164, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayActionPerformed
        Date d=datePicker.getDate();
        SimpleDateFormat df=new SimpleDateFormat("yyyy-MM-dd");
        String paymentDate=df.format(d);
        
        String apID=(String) cmbAppID.getSelectedItem();
        try {
            JasperReport compiledReport = JasperCompileManager.compileReport(StartUp.class.getResourceAsStream("/lk/ijse/gdse41/doctorchannelingsystem/jasper/report/Cherry.jrxml"));
            HashMap<String, Object> parameters=new HashMap<>();
            parameters.put("apID",apID);
            parameters.put("apDate",txtApDate.getText());
            parameters.put("apNo",txtApNO.getText());
            parameters.put("timeSlot",txtTimeSlot.getText());
            parameters.put("drName",txtDoctorName.getText());
            parameters.put("spType",txtSpType.getText());
            parameters.put("pID",txtPatientID.getText());
            parameters.put("PatientName",txtPatientName.getText());
            parameters.put("payID",txtPaymentID.getText());
            parameters.put("payDate",paymentDate);
            parameters.put("totalCharge",Double.parseDouble(txtFullCharge.getText()));
            
            JasperPrint filledReport=JasperFillManager.fillReport(compiledReport, parameters, new JREmptyDataSource());
            JasperReportViewer frmViwer=new JasperReportViewer(filledReport);
            frmViwer.setVisible(true);
        } catch (JRException ex) {
            Logger.getLogger(MakePaymentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        PaymentDTO payment=new PaymentDTO(
                txtPaymentID.getText(),
                apID,
                txtApDate.getText(),
                txtPatientID.getText(),
                paymentDate,
                Double.parseDouble(txtFullCharge.getText()));
        try {
            boolean result=ctrlPayment.add(payment);
            if(result){
                JOptionPane.showMessageDialog(this,"Payment Done..!");
            }else{
                JOptionPane.showMessageDialog(this, "Payment Not complete");
            }
        } catch (Exception ex) {
            Logger.getLogger(MakePaymentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnPayActionPerformed

    private void cmbAppIDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbAppIDItemStateChanged
       String apID=(String) cmbAppID.getSelectedItem();
        try {
            AppointmentSearchDTO appointment=ctrlQuery.getAppointmentDetails(apID);
            txtApDate.setText(appointment.getApDate());
            txtDoctorName.setText(appointment.getDrName());
            txtSpType.setText(appointment.getSpType());
            txtPatientID.setText(appointment.getpID());
            txtPatientName.setText(appointment.getpName());
            txtApNO.setText(appointment.getApNo());
            txtTimeSlot.setText(appointment.getTimeSlot());
        } catch (Exception ex) {
            Logger.getLogger(MakePaymentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        datePicker.requestFocus();
    }//GEN-LAST:event_cmbAppIDItemStateChanged

    private void datePickerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datePickerActionPerformed
       txtFullCharge.requestFocus();
    }//GEN-LAST:event_datePickerActionPerformed

    private void txtFullChargeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFullChargeActionPerformed
        btnPay.setEnabled(true);
    }//GEN-LAST:event_txtFullChargeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXButton btnPay;
    private com.jidesoft.swing.AutoCompletionComboBox cmbAppID;
    private org.jdesktop.swingx.JXDatePicker datePicker;
    private javax.swing.JLabel lblApDate;
    private javax.swing.JLabel lblApNo;
    private javax.swing.JLabel lblAppointmentID;
    private javax.swing.JLabel lblDoctorName;
    private javax.swing.JLabel lblFullCharge;
    private javax.swing.JLabel lblPatientID;
    private javax.swing.JLabel lblPatientName;
    private javax.swing.JLabel lblPaymentDate;
    private javax.swing.JLabel lblPaymentID;
    private javax.swing.JLabel lblSpeciality;
    private javax.swing.JLabel lblTimeSlot;
    private javax.swing.JLabel lblTopic;
    private javax.swing.JTextField txtApDate;
    private javax.swing.JTextField txtApNO;
    private javax.swing.JTextField txtDoctorName;
    private javax.swing.JTextField txtFullCharge;
    private javax.swing.JTextField txtPatientID;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextField txtPaymentID;
    private javax.swing.JTextField txtSpType;
    private javax.swing.JTextField txtTimeSlot;
    // End of variables declaration//GEN-END:variables
}
