/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.gdse41.doctorchannelingsystem.view.panel;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import lk.ijse.gdse41.doctorchannelingsystem.controller.ControllerFactory;
import lk.ijse.gdse41.doctorchannelingsystem.controller.custom.AttendanceController;
import lk.ijse.gdse41.doctorchannelingsystem.controller.custom.QueryController;
import lk.ijse.gdse41.doctorchannelingsystem.dto.AppointmentSearchDTO;
import lk.ijse.gdse41.doctorchannelingsystem.dto.AttendanceDTO;

/**
 *
 * @author Binura Salindra
 */
public class MarkAppointmentPanel extends javax.swing.JPanel {
    private QueryController ctrlQuery;
    private AttendanceController ctrlAttendance;

    /**
     * Creates new form PaymentPanel
     */
    public MarkAppointmentPanel() {
        initComponents();
        ctrlQuery=(QueryController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.QUERY);
        ctrlAttendance=(AttendanceController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.ATTENDANCE);
        LoadAppointmentID();
        btnMark.setEnabled(false);
        
    }
    private void LoadAppointmentID(){
        Date d=new Date();
        SimpleDateFormat df=new SimpleDateFormat("yyyy-MM-dd");
        String apDate=df.format(d);
        lblDate.setText(apDate);
        
       
        ArrayList<String> appointmentID;
        try {
            appointmentID = ctrlQuery.getAppointmentIdsByDate(apDate);
            for (int i = 0; i < appointmentID.size(); i++){
            cmbAppID.addItem(appointmentID.get(i));
        }
            
        } catch (Exception ex) {
            Logger.getLogger(MarkAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        lblTopic = new javax.swing.JLabel();
        lblApID = new javax.swing.JLabel();
        lblDoctorName = new javax.swing.JLabel();
        lblApDate = new javax.swing.JLabel();
        lblPatientID = new javax.swing.JLabel();
        lblPatientName = new javax.swing.JLabel();
        txtApDate = new javax.swing.JTextField();
        txtDoctorName = new javax.swing.JTextField();
        txtPatientID = new javax.swing.JTextField();
        txtPatientName = new javax.swing.JTextField();
        lblSpeciality = new javax.swing.JLabel();
        txtSpType = new javax.swing.JTextField();
        lblAppointmentNo = new javax.swing.JLabel();
        lblTimeSlot = new javax.swing.JLabel();
        txtApNO = new javax.swing.JTextField();
        txtTimeSlot = new javax.swing.JTextField();
        cmbAppID = new com.jidesoft.swing.AutoCompletionComboBox();
        lblToday = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        lblAppointmentStatus = new javax.swing.JLabel();
        rbtnAttend = new javax.swing.JRadioButton();
        rbtnNotAttend = new javax.swing.JRadioButton();
        btnMark = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        lblTopic.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblTopic.setText("Mark Appointment Attendance");

        lblApID.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblApID.setText("Appointment ID :");

        lblDoctorName.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblDoctorName.setText("Doctor Name :");

        lblApDate.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblApDate.setText("Appointment Date :");

        lblPatientID.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblPatientID.setText("Patient ID :");

        lblPatientName.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblPatientName.setText("Patient Name :");

        txtApDate.setFocusable(false);

        txtDoctorName.setFocusable(false);

        txtPatientID.setFocusable(false);

        txtPatientName.setFocusable(false);

        lblSpeciality.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblSpeciality.setText("Speciality :");

        txtSpType.setFocusable(false);

        lblAppointmentNo.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblAppointmentNo.setText("Appointment No :");

        lblTimeSlot.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblTimeSlot.setText("Time Slot :");

        txtApNO.setFocusable(false);

        txtTimeSlot.setFocusable(false);

        cmbAppID.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbAppIDItemStateChanged(evt);
            }
        });

        lblToday.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lblToday.setText("Today is :");

        lblDate.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N

        lblAppointmentStatus.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblAppointmentStatus.setText("Appointment Status :");

        rbtnAttend.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(rbtnAttend);
        rbtnAttend.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rbtnAttend.setText("Attend");
        rbtnAttend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnAttendActionPerformed(evt);
            }
        });

        rbtnNotAttend.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(rbtnNotAttend);
        rbtnNotAttend.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rbtnNotAttend.setText("Not Attend");
        rbtnNotAttend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnNotAttendActionPerformed(evt);
            }
        });

        btnMark.setText("Mark");
        btnMark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMarkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPatientID)
                    .addComponent(lblPatientName)
                    .addComponent(lblTopic, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSpeciality)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblAppointmentStatus)
                        .addGap(18, 18, 18)
                        .addComponent(rbtnAttend)
                        .addGap(18, 18, 18)
                        .addComponent(rbtnNotAttend))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnMark)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblToday, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblApDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblDoctorName, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblApID, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtDoctorName, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                                    .addComponent(txtApDate, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                                    .addComponent(txtSpType, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                                    .addComponent(txtPatientID, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                                    .addComponent(txtPatientName, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                                    .addComponent(cmbAppID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAppointmentNo)
                            .addComponent(lblTimeSlot))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTimeSlot, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtApNO, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(298, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTopic)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblToday, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(lblDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblApID)
                    .addComponent(lblAppointmentNo)
                    .addComponent(txtApNO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbAppID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblApDate)
                    .addComponent(txtApDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTimeSlot)
                    .addComponent(txtTimeSlot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDoctorName)
                    .addComponent(txtDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSpeciality)
                    .addComponent(txtSpType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientID)
                    .addComponent(txtPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientName)
                    .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAppointmentStatus)
                    .addComponent(rbtnAttend)
                    .addComponent(rbtnNotAttend))
                .addGap(18, 18, 18)
                .addComponent(btnMark)
                .addContainerGap(237, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbAppIDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbAppIDItemStateChanged
       String apID=(String) cmbAppID.getSelectedItem();
        try {
            AppointmentSearchDTO appointment=ctrlQuery.getAppointmentDetails(apID);
            txtApDate.setText(appointment.getApDate());
            txtDoctorName.setText(appointment.getDrName());
            txtSpType.setText(appointment.getSpType());
            txtPatientID.setText(appointment.getpID());
            txtPatientName.setText(appointment.getpName());
            txtApNO.setText(appointment.getApNo());
            txtTimeSlot.setText(appointment.getTimeSlot());
        } catch (Exception ex) {
            Logger.getLogger(MarkAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmbAppIDItemStateChanged

    private void btnMarkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMarkActionPerformed
        String status;
        if(rbtnAttend.isSelected()){
            status="Attend";
        }else{
            status="Not Attend";
        }
        String apID=(String) cmbAppID.getSelectedItem();
        AttendanceDTO dto=new AttendanceDTO(
               apID,
               txtApNO.getText(), 
               txtApDate.getText(), 
               status);
        try {
            boolean result=ctrlAttendance.add(dto);
            if(result){
                JOptionPane.showMessageDialog(this,"Marked");
            }else{
                JOptionPane.showMessageDialog(this, "Not Marked");
            }
        } catch (Exception ex) {
            Logger.getLogger(MarkAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnMarkActionPerformed

    private void rbtnAttendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnAttendActionPerformed
        btnMark.setEnabled(true);
    }//GEN-LAST:event_rbtnAttendActionPerformed

    private void rbtnNotAttendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnNotAttendActionPerformed
       btnMark.setEnabled(true);
    }//GEN-LAST:event_rbtnNotAttendActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMark;
    private javax.swing.ButtonGroup buttonGroup1;
    private com.jidesoft.swing.AutoCompletionComboBox cmbAppID;
    private javax.swing.JLabel lblApDate;
    private javax.swing.JLabel lblApID;
    private javax.swing.JLabel lblAppointmentNo;
    private javax.swing.JLabel lblAppointmentStatus;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblDoctorName;
    private javax.swing.JLabel lblPatientID;
    private javax.swing.JLabel lblPatientName;
    private javax.swing.JLabel lblSpeciality;
    private javax.swing.JLabel lblTimeSlot;
    private javax.swing.JLabel lblToday;
    private javax.swing.JLabel lblTopic;
    private javax.swing.JRadioButton rbtnAttend;
    private javax.swing.JRadioButton rbtnNotAttend;
    private javax.swing.JTextField txtApDate;
    private javax.swing.JTextField txtApNO;
    private javax.swing.JTextField txtDoctorName;
    private javax.swing.JTextField txtPatientID;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextField txtSpType;
    private javax.swing.JTextField txtTimeSlot;
    // End of variables declaration//GEN-END:variables
}
