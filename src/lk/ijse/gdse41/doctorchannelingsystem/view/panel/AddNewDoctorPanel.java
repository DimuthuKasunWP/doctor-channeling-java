/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.gdse41.doctorchannelingsystem.view.panel;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import lk.ijse.gdse41.doctorchannelingsystem.controller.ControllerFactory;
import lk.ijse.gdse41.doctorchannelingsystem.controller.custom.DoctorController;
import lk.ijse.gdse41.doctorchannelingsystem.controller.custom.HospitalController;
import lk.ijse.gdse41.doctorchannelingsystem.controller.custom.QueryController;
import lk.ijse.gdse41.doctorchannelingsystem.controller.custom.ScheduleController;
import lk.ijse.gdse41.doctorchannelingsystem.controller.custom.SpecialityController;
import lk.ijse.gdse41.doctorchannelingsystem.controller.custom.ValidationController;
import lk.ijse.gdse41.doctorchannelingsystem.controller.custom.impl.QueryControllerImpl;
import lk.ijse.gdse41.doctorchannelingsystem.dto.DoctorDTO;
import lk.ijse.gdse41.doctorchannelingsystem.dto.HospitalDTO;
import lk.ijse.gdse41.doctorchannelingsystem.dto.ScheduleDTO;
import lk.ijse.gdse41.doctorchannelingsystem.dto.SpecialityDTO;
import lk.ijse.gdse41.doctorchannelingsystem.idgenarate.IDGenarator;

/**
 *
 * @author Binura Salindra
 */
public class AddNewDoctorPanel extends javax.swing.JPanel {
    private ValidationController ctrlValidation;
    private DoctorController ctrlDoctor;
    private SpecialityController ctrlSpeciality;
    private HospitalController ctrlHospital;
    private QueryController ctrlQuery;
    private ScheduleController ctrlSchedule;

    /**
     * Creates new form AddNewDoctorPanel
     */
    public AddNewDoctorPanel() {
        initComponents();
        ctrlValidation=(ValidationController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.VALIDATION);
        ctrlQuery=(QueryController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.QUERY);
        ctrlDoctor=(DoctorController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.DOCTOR);
        ctrlSpeciality=(SpecialityController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.SPECIALITY);
        ctrlHospital=(HospitalController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.HOSPITAL);
        ctrlSchedule=(ScheduleController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.SCHEDULE);
        loadHospitalNames();
        loadSpecialityTypes();
        genarateDoctorID();
        genatareScheduleID();
        
    }
    
    private void loadHospitalNames(){
        ArrayList<String> hospitalNames = null;
        try {
            hospitalNames = ctrlQuery.getAllHospitalNames();
        } catch (Exception ex) {
            Logger.getLogger(AddNewDoctorPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (int i = 0; i < hospitalNames.size(); i++){
            cmbHospital.addItem(hospitalNames.get(i));
        }
	}
    private void loadSpecialityTypes(){
        ArrayList<String> specialityTypes=null;
        try {
            specialityTypes=ctrlQuery.getAllSpecialityTypes();
        } catch (Exception ex) {
            Logger.getLogger(AddNewDoctorPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
         for (int i = 0; i < specialityTypes.size(); i++){
            cmbSpeciality.addItem(specialityTypes.get(i));
        }
       
   }
    public void genarateDoctorID(){
        try {
            txtDoctorId.setText(IDGenarator.getNewID("doctor","drID","D"));
        } catch (SQLException ex) {
            Logger.getLogger(AddNewDoctorPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddNewDoctorPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void genatareScheduleID(){
        try {
            txtScheduleID.setText(IDGenarator.getNewID("schedule", "scID","S"));
        } catch (SQLException ex) {
            Logger.getLogger(AddNewDoctorPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddNewDoctorPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDoctorId = new javax.swing.JLabel();
        lblDoctorName = new javax.swing.JLabel();
        lblTelNo = new javax.swing.JLabel();
        lblSpeciality = new javax.swing.JLabel();
        lblSpId = new javax.swing.JLabel();
        lblHospital = new javax.swing.JLabel();
        lblHospitalId = new javax.swing.JLabel();
        txtDoctorId = new javax.swing.JTextField();
        txtDoctorName = new javax.swing.JTextField();
        txtTelNo = new javax.swing.JTextField();
        cmbSpeciality = new com.jidesoft.swing.AutoCompletionComboBox();
        cmbHospital = new com.jidesoft.swing.AutoCompletionComboBox();
        txtSpecialityId = new javax.swing.JTextField();
        txtHospitalId = new javax.swing.JTextField();
        btnAdd = new org.jdesktop.swingx.JXButton();
        btnAddNewSp = new org.jdesktop.swingx.JXButton();
        btnAddNewHo = new org.jdesktop.swingx.JXButton();
        lblAddNewDoctor = new javax.swing.JLabel();
        pnlBaseSpHo = new javax.swing.JPanel();
        lblScheduleId = new javax.swing.JLabel();
        txtScheduleID = new javax.swing.JTextField();
        lblAddNewScheduleDetails = new javax.swing.JLabel();
        lblDayName = new javax.swing.JLabel();
        cmbDayName = new com.jidesoft.swing.AutoCompletionComboBox();
        lblTimeSlot = new javax.swing.JLabel();
        txtTimeSlot = new javax.swing.JTextField();
        lblMessage1 = new javax.swing.JLabel();
        lblMaxPatientCount = new javax.swing.JLabel();
        txtMaxPatientCount = new javax.swing.JTextField();
        lblMessage2 = new javax.swing.JLabel();
        lblMessage3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        lblDoctorId.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblDoctorId.setText("Doc ID :");

        lblDoctorName.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblDoctorName.setText("Name :");

        lblTelNo.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblTelNo.setText("Tel No :");

        lblSpeciality.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblSpeciality.setText("Speciality :");

        lblSpId.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblSpId.setText("Sp ID :");

        lblHospital.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblHospital.setText("Hospital :");

        lblHospitalId.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblHospitalId.setText("Hos ID :");

        txtDoctorName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDoctorNameActionPerformed(evt);
            }
        });

        txtTelNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelNoActionPerformed(evt);
            }
        });

        cmbSpeciality.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbSpecialityItemStateChanged(evt);
            }
        });
        cmbSpeciality.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSpecialityActionPerformed(evt);
            }
        });

        cmbHospital.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbHospitalItemStateChanged(evt);
            }
        });
        cmbHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbHospitalActionPerformed(evt);
            }
        });

        txtSpecialityId.setFocusable(false);

        txtHospitalId.setFocusable(false);

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnAddNewSp.setText("New");
        btnAddNewSp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddNewSpMouseClicked(evt);
            }
        });

        btnAddNewHo.setText("New");
        btnAddNewHo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddNewHoMouseClicked(evt);
            }
        });

        lblAddNewDoctor.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblAddNewDoctor.setText("Add New Doctor");

        pnlBaseSpHo.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout pnlBaseSpHoLayout = new javax.swing.GroupLayout(pnlBaseSpHo);
        pnlBaseSpHo.setLayout(pnlBaseSpHoLayout);
        pnlBaseSpHoLayout.setHorizontalGroup(
            pnlBaseSpHoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 484, Short.MAX_VALUE)
        );
        pnlBaseSpHoLayout.setVerticalGroup(
            pnlBaseSpHoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        lblScheduleId.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblScheduleId.setText("Schedule ID :");

        txtScheduleID.setFocusable(false);

        lblAddNewScheduleDetails.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblAddNewScheduleDetails.setText("Add Schedule Details");

        lblDayName.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblDayName.setText("Day Name :");

        cmbDayName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday" }));
        cmbDayName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDayNameActionPerformed(evt);
            }
        });

        lblTimeSlot.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblTimeSlot.setText("Time Slot :");

        txtTimeSlot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimeSlotActionPerformed(evt);
            }
        });

        lblMessage1.setBackground(new java.awt.Color(255, 255, 255));
        lblMessage1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblMessage1.setForeground(new java.awt.Color(255, 0, 0));
        lblMessage1.setText("For time slot use 16:00 - 18:00 by 24 hours format");

        lblMaxPatientCount.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblMaxPatientCount.setText("Max patient count :");

        txtMaxPatientCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaxPatientCountActionPerformed(evt);
            }
        });

        lblMessage2.setBackground(new java.awt.Color(255, 255, 255));
        lblMessage2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblMessage2.setForeground(new java.awt.Color(153, 153, 153));
        lblMessage2.setText("Tip :If you want to add another schedule for ");

        lblMessage3.setBackground(new java.awt.Color(255, 255, 255));
        lblMessage3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblMessage3.setForeground(new java.awt.Color(153, 153, 153));
        lblMessage3.setText("this doctor please use schedule settings");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblAddNewDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblAddNewScheduleDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(lblDoctorName)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(txtDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(lblDoctorId)
                                                .addGap(27, 27, 27)
                                                .addComponent(txtDoctorId, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblTelNo)
                                                    .addComponent(lblSpeciality)
                                                    .addComponent(lblSpId))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtSpecialityId)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(cmbSpeciality, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(txtTelNo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)))))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnAddNewSp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblHospitalId)
                                                .addGap(28, 28, 28)
                                                .addComponent(txtHospitalId, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblHospital)
                                                .addGap(18, 18, 18)
                                                .addComponent(cmbHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnAddNewHo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(1, 18, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblMessage2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(lblMessage1))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblScheduleId)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtScheduleID, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblDayName)
                                    .addGap(18, 18, 18)
                                    .addComponent(cmbDayName, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblTimeSlot)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtTimeSlot, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblMaxPatientCount)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtMaxPatientCount, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblMessage3, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(pnlBaseSpHo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlBaseSpHo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblAddNewDoctor)
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDoctorId)
                            .addComponent(txtDoctorId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDoctorName)
                            .addComponent(txtDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTelNo)
                            .addComponent(txtTelNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSpeciality)
                            .addComponent(cmbSpeciality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAddNewSp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSpId)
                            .addComponent(txtSpecialityId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHospital)
                            .addComponent(cmbHospital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAddNewHo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHospitalId)
                            .addComponent(txtHospitalId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(lblAddNewScheduleDetails)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblScheduleId)
                            .addComponent(txtScheduleID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDayName)
                            .addComponent(cmbDayName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblTimeSlot)
                            .addComponent(txtTimeSlot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblMessage1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMaxPatientCount)
                            .addComponent(txtMaxPatientCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblMessage2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMessage3)
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 106, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        
        DoctorDTO doctor=new DoctorDTO(
                txtDoctorId.getText(),
                txtSpecialityId.getText(),
                txtHospitalId.getText(),
                txtDoctorName.getText(),
                txtTelNo.getText());
            
        
        String dayName=(String) cmbDayName.getSelectedItem();
        
        ScheduleDTO schedule=new ScheduleDTO(
                txtScheduleID.getText(),
                txtDoctorId.getText(),
                dayName,
                txtTimeSlot.getText(),
                Integer.parseInt(txtMaxPatientCount.getText()));
        try {
            boolean addWithTrance=ctrlDoctor.addWithTrance(doctor, schedule);
            if(addWithTrance){
                JOptionPane.showMessageDialog(this,"Added succesful..!");
            }else{
                JOptionPane.showMessageDialog(this,"Something went to wrong please check details");
            }
        } catch (Exception ex) {
            Logger.getLogger(AddNewDoctorPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
              
        
        
            
     
        
      
    }//GEN-LAST:event_btnAddActionPerformed

    private void cmbSpecialityItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbSpecialityItemStateChanged
       String id=(String) cmbSpeciality.getSelectedItem();
        try {
            SpecialityDTO speciality=ctrlSpeciality.search(id);
            txtSpecialityId.setText(speciality.getSpID());
        } catch (Exception ex) {
            Logger.getLogger(AddNewDoctorPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmbSpecialityItemStateChanged

    private void cmbHospitalItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbHospitalItemStateChanged
      String id=(String) cmbHospital.getSelectedItem();
        try {
            HospitalDTO hospital=ctrlHospital.search(id);
            txtHospitalId.setText(hospital.gethID());
        } catch (Exception ex) {
            Logger.getLogger(AddNewDoctorPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmbHospitalItemStateChanged

    private void btnAddNewSpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddNewSpMouseClicked
      AddNewSpecialityPanel s1=new AddNewSpecialityPanel();
      s1.setSize(pnlBaseSpHo.getSize());
      pnlBaseSpHo.removeAll();
      pnlBaseSpHo.add(s1);
      pnlBaseSpHo.revalidate();
      pnlBaseSpHo.repaint();
      s1.show();
    }//GEN-LAST:event_btnAddNewSpMouseClicked

    private void btnAddNewHoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddNewHoMouseClicked
      AddNewHospitalPanel s1=new AddNewHospitalPanel();
      s1.setSize(pnlBaseSpHo.getSize());
      pnlBaseSpHo.removeAll();
      pnlBaseSpHo.add(s1);
      pnlBaseSpHo.revalidate();
      pnlBaseSpHo.repaint();
      s1.show();
    }//GEN-LAST:event_btnAddNewHoMouseClicked

    private void txtTelNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelNoActionPerformed
        String phone=txtTelNo.getText();
        try {
            boolean isAdded=ctrlValidation.phoneNumberValidation(phone);
            if(isAdded){
                JOptionPane.showMessageDialog(this,"Correct Number");
                
            }else{
                JOptionPane.showMessageDialog(this,"wrong Number");
            }
        } catch (Exception ex) {
            Logger.getLogger(AddNewDoctorPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        cmbSpeciality.requestFocus();
        
    }//GEN-LAST:event_txtTelNoActionPerformed

    private void txtDoctorNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDoctorNameActionPerformed
        txtTelNo.requestFocus();
    }//GEN-LAST:event_txtDoctorNameActionPerformed

    private void cmbSpecialityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSpecialityActionPerformed
       cmbHospital.requestFocus();
    }//GEN-LAST:event_cmbSpecialityActionPerformed

    private void cmbHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbHospitalActionPerformed
      cmbDayName.requestFocus();
    }//GEN-LAST:event_cmbHospitalActionPerformed

    private void cmbDayNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDayNameActionPerformed
      txtTimeSlot.requestFocus();
    }//GEN-LAST:event_cmbDayNameActionPerformed

    private void txtTimeSlotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimeSlotActionPerformed
       
       String timeSlot=txtTimeSlot.getText();
        try {
            boolean result=ctrlValidation.timeSlotValidation(timeSlot);
            if(result){
                txtMaxPatientCount.requestFocus();
            }else{
                JOptionPane.showMessageDialog(this,"Invalid time format, please try again");
            }
        } catch (Exception ex) {
            Logger.getLogger(AddNewDoctorPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtTimeSlotActionPerformed

    private void txtMaxPatientCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaxPatientCountActionPerformed
       btnAdd.requestFocus();
    }//GEN-LAST:event_txtMaxPatientCountActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXButton btnAdd;
    private org.jdesktop.swingx.JXButton btnAddNewHo;
    private org.jdesktop.swingx.JXButton btnAddNewSp;
    private com.jidesoft.swing.AutoCompletionComboBox cmbDayName;
    private com.jidesoft.swing.AutoCompletionComboBox cmbHospital;
    private com.jidesoft.swing.AutoCompletionComboBox cmbSpeciality;
    private javax.swing.JLabel lblAddNewDoctor;
    private javax.swing.JLabel lblAddNewScheduleDetails;
    private javax.swing.JLabel lblDayName;
    private javax.swing.JLabel lblDoctorId;
    private javax.swing.JLabel lblDoctorName;
    private javax.swing.JLabel lblHospital;
    private javax.swing.JLabel lblHospitalId;
    private javax.swing.JLabel lblMaxPatientCount;
    private javax.swing.JLabel lblMessage1;
    private javax.swing.JLabel lblMessage2;
    private javax.swing.JLabel lblMessage3;
    private javax.swing.JLabel lblScheduleId;
    private javax.swing.JLabel lblSpId;
    private javax.swing.JLabel lblSpeciality;
    private javax.swing.JLabel lblTelNo;
    private javax.swing.JLabel lblTimeSlot;
    private javax.swing.JPanel pnlBaseSpHo;
    private javax.swing.JTextField txtDoctorId;
    private javax.swing.JTextField txtDoctorName;
    private javax.swing.JTextField txtHospitalId;
    private javax.swing.JTextField txtMaxPatientCount;
    private javax.swing.JTextField txtScheduleID;
    private javax.swing.JTextField txtSpecialityId;
    private javax.swing.JTextField txtTelNo;
    private javax.swing.JTextField txtTimeSlot;
    // End of variables declaration//GEN-END:variables
}
