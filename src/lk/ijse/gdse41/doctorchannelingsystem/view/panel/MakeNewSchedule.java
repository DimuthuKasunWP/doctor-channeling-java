/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.gdse41.doctorchannelingsystem.view.panel;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import lk.ijse.gdse41.doctorchannelingsystem.controller.ControllerFactory;
import lk.ijse.gdse41.doctorchannelingsystem.controller.custom.DoctorController;
import lk.ijse.gdse41.doctorchannelingsystem.controller.custom.QueryController;
import lk.ijse.gdse41.doctorchannelingsystem.controller.custom.ScheduleController;
import lk.ijse.gdse41.doctorchannelingsystem.controller.custom.ValidationController;
import lk.ijse.gdse41.doctorchannelingsystem.dto.ScheduleDTO;
import lk.ijse.gdse41.doctorchannelingsystem.dto.SearchQueryDTO;
import lk.ijse.gdse41.doctorchannelingsystem.idgenarate.IDGenarator;

/**
 *
 * @author Binura Salindra
 */
public class MakeNewSchedule extends javax.swing.JPanel {
    private QueryController ctrlQuery;
    private DoctorController ctrlDoctor;
    private ScheduleController ctrlSchedule;
    private ValidationController ctrlValidation;

    /**
     * Creates new form MakeNewSchedule
     */
    public MakeNewSchedule() {
        initComponents();
        ctrlQuery=(QueryController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.QUERY);
        ctrlDoctor=(DoctorController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.DOCTOR);
        ctrlSchedule=(ScheduleController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.SCHEDULE);
        ctrlValidation=(ValidationController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.VALIDATION);
        loadDoctorID();
        genarateScheduleID();
    }
    private void loadDoctorID(){
        ArrayList<String> allDoctorIds=null;
       
        try {
            allDoctorIds=ctrlQuery.getAllDoctorId();
        } catch (Exception ex) {
            Logger.getLogger(MakeNewSchedule.class.getName()).log(Level.SEVERE, null, ex);
        }
        
         for (int i = 0; i < allDoctorIds.size(); i++){
            cmbDoctorId.addItem(allDoctorIds.get(i));
        }
       
   }
    private void genarateScheduleID(){
        try {
            txtScheduleID.setText(IDGenarator.getNewID("Schedule","scID", "S"));
        } catch (SQLException ex) {
            Logger.getLogger(MakeNewSchedule.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MakeNewSchedule.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTopic = new javax.swing.JLabel();
        lblDoctorID = new javax.swing.JLabel();
        cmbDoctorId = new com.jidesoft.swing.AutoCompletionComboBox();
        lblName = new javax.swing.JLabel();
        txtDoctorName = new javax.swing.JTextField();
        lblSpeciality = new javax.swing.JLabel();
        txtSpeciality = new javax.swing.JTextField();
        lblHospital = new javax.swing.JLabel();
        txtHospital = new javax.swing.JTextField();
        lblScheduleID = new javax.swing.JLabel();
        txtScheduleID = new javax.swing.JTextField();
        lblDay = new javax.swing.JLabel();
        cmbDate = new com.jidesoft.swing.AutoCompletionComboBox();
        lblTimeSlot = new javax.swing.JLabel();
        txtTimeSlot = new javax.swing.JTextField();
        lblMaxPatientCount = new javax.swing.JLabel();
        txtMaxPatientCount = new javax.swing.JTextField();
        lblMessage = new javax.swing.JLabel();
        btnAdd = new org.jdesktop.swingx.JXButton();

        setBackground(new java.awt.Color(255, 255, 255));

        lblTopic.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblTopic.setText("Add New Schedule");

        lblDoctorID.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblDoctorID.setText("Doctor ID :");

        cmbDoctorId.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbDoctorIdItemStateChanged(evt);
            }
        });
        cmbDoctorId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDoctorIdActionPerformed(evt);
            }
        });

        lblName.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblName.setText("Name :");

        txtDoctorName.setFocusable(false);

        lblSpeciality.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblSpeciality.setText("Speciality :");

        txtSpeciality.setFocusable(false);

        lblHospital.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblHospital.setText("Hospital :");

        txtHospital.setFocusable(false);

        lblScheduleID.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblScheduleID.setText("Schedule ID :");

        txtScheduleID.setFocusable(false);

        lblDay.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblDay.setText("Day :");

        cmbDate.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday" }));
        cmbDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDateActionPerformed(evt);
            }
        });

        lblTimeSlot.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblTimeSlot.setText("Time Slot :");

        txtTimeSlot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimeSlotActionPerformed(evt);
            }
        });

        lblMaxPatientCount.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblMaxPatientCount.setText("Max Patient Count :");

        txtMaxPatientCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaxPatientCountActionPerformed(evt);
            }
        });

        lblMessage.setBackground(new java.awt.Color(255, 255, 255));
        lblMessage.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblMessage.setForeground(new java.awt.Color(255, 0, 0));
        lblMessage.setText("For time slot use 16:00 - 18:00 by 24 hours format");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblMessage)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblTopic, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblMaxPatientCount)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtMaxPatientCount, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblHospital)
                            .addGap(46, 46, 46)
                            .addComponent(txtHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lblSpeciality)
                                .addGap(35, 35, 35)
                                .addComponent(txtSpeciality))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDoctorID)
                                    .addComponent(lblName))
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbDoctorId, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblScheduleID)
                                .addComponent(lblDay, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(19, 19, 19)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtScheduleID)
                                .addComponent(cmbDate, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblTimeSlot)
                            .addGap(37, 37, 37)
                            .addComponent(txtTimeSlot, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(733, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTopic)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDoctorID)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(cmbDoctorId, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(txtDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSpeciality)
                    .addComponent(txtSpeciality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHospital)
                    .addComponent(txtHospital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblScheduleID)
                    .addComponent(txtScheduleID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDay)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(cmbDate, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTimeSlot)
                    .addComponent(txtTimeSlot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblMessage)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaxPatientCount)
                    .addComponent(txtMaxPatientCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(206, 206, 206))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbDoctorIdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbDoctorIdItemStateChanged
      String doctorID=(String) cmbDoctorId.getSelectedItem();
        try {
            SearchQueryDTO search=ctrlQuery.getAllDoctorDetails(doctorID);
            txtDoctorName.setText(search.getDrName());
            txtSpeciality.setText(search.getSpType());
            txtHospital.setText(search.gethName());
        } catch (Exception ex) {
            Logger.getLogger(MakeNewSchedule.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmbDoctorIdItemStateChanged

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        String doctorID=(String) cmbDoctorId.getSelectedItem();
        String dayName=(String) cmbDate.getSelectedItem();
        ScheduleDTO schedule=new ScheduleDTO(
            txtScheduleID.getText(),
            doctorID,
            dayName,
            txtTimeSlot.getText(),
            Integer.parseInt(txtMaxPatientCount.getText()));
        try {
            boolean result=ctrlSchedule.add(schedule);
            if(result){
                JOptionPane.showMessageDialog(this,"Added Sucsse");
            }else{
                JOptionPane.showMessageDialog(this,"Something wrong, Try Agin");
            }
        } catch (Exception ex) {
            Logger.getLogger(MakeNewSchedule.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void txtTimeSlotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimeSlotActionPerformed
        String timeSlot=txtTimeSlot.getText();
        try {
            boolean result=ctrlValidation.timeSlotValidation(timeSlot);
            if(result){
                txtMaxPatientCount.requestFocus();
            }else{
                JOptionPane.showMessageDialog(this,"Invalid time format, please try again");
            }
        } catch (Exception ex) {
            Logger.getLogger(MakeNewSchedule.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtTimeSlotActionPerformed

    private void cmbDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDateActionPerformed
        txtTimeSlot.requestFocus();
    }//GEN-LAST:event_cmbDateActionPerformed

    private void txtMaxPatientCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaxPatientCountActionPerformed
       btnAdd.requestFocus();
    }//GEN-LAST:event_txtMaxPatientCountActionPerformed

    private void cmbDoctorIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDoctorIdActionPerformed
        cmbDate.requestFocus();
    }//GEN-LAST:event_cmbDoctorIdActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXButton btnAdd;
    private com.jidesoft.swing.AutoCompletionComboBox cmbDate;
    private com.jidesoft.swing.AutoCompletionComboBox cmbDoctorId;
    private javax.swing.JLabel lblDay;
    private javax.swing.JLabel lblDoctorID;
    private javax.swing.JLabel lblHospital;
    private javax.swing.JLabel lblMaxPatientCount;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblScheduleID;
    private javax.swing.JLabel lblSpeciality;
    private javax.swing.JLabel lblTimeSlot;
    private javax.swing.JLabel lblTopic;
    private javax.swing.JTextField txtDoctorName;
    private javax.swing.JTextField txtHospital;
    private javax.swing.JTextField txtMaxPatientCount;
    private javax.swing.JTextField txtScheduleID;
    private javax.swing.JTextField txtSpeciality;
    private javax.swing.JTextField txtTimeSlot;
    // End of variables declaration//GEN-END:variables
}
