/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.gdse41.doctorchannelingsystem.view.panel;

import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import lk.ijse.gdse41.doctorchannelingsystem.controller.ControllerFactory;
import lk.ijse.gdse41.doctorchannelingsystem.controller.custom.AppointmentController;
import lk.ijse.gdse41.doctorchannelingsystem.controller.custom.PatientController;
import lk.ijse.gdse41.doctorchannelingsystem.controller.custom.QueryController;
import lk.ijse.gdse41.doctorchannelingsystem.controller.custom.ValidationController;
import lk.ijse.gdse41.doctorchannelingsystem.dto.AppointmentDTO;
import lk.ijse.gdse41.doctorchannelingsystem.dto.PatientDTO;
import lk.ijse.gdse41.doctorchannelingsystem.idgenarate.IDGenarator;

/**
 *
 * @author Binura Salindra
 */
public class AddNewPatientPanel extends javax.swing.JPanel {

    private ValidationController ctrlValidation;
    private PatientController ctrlPatient;
    private AppointmentController ctrlAppointment;
    private String scheduleKey;
    private QueryController ctrlQuery;

    /**
     * Creates new form AddNewPatientPanel
     */
    public AddNewPatientPanel() {

        ctrlValidation = (ValidationController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.VALIDATION);
        ctrlPatient = (PatientController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.PATIENT);
        ctrlAppointment = (AppointmentController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.APPOINTMENT);
        ctrlQuery = (QueryController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.QUERY);

        /*try {
           int maxPatientCount= ctrlQuery.getMaxPatientCount(txtScheduleId.getText());
           int count=ctrlQuery.countable(txtScheduleId.getText());
           if(maxPatientCount>=count){
           txtAppNo.setText((count+1));
           }
           else if(maxPatientCount==count){
            
           }
        } catch (Exception ex) {
            Logger.getLogger(AddNewPatientPanel.class.getName()).log(Level.SEVERE, null, ex);
        }*/
        initComponents();
        //genaratePatientID();
    }

    public AddNewPatientPanel(String apNo, String apID, String scheduleID, String apDate) {

        ctrlValidation = (ValidationController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.VALIDATION);
        ctrlPatient = (PatientController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.PATIENT);
        ctrlAppointment = (AppointmentController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.APPOINTMENT);
        ctrlQuery = (QueryController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.QUERY);
        initComponents();
        //System.out.println(scId);
        txtAppNo.setText(apNo);
        txtAppId.setText(apID);
        txtScheduleId1.setText(scheduleID);
        txtApDate.setText(apDate);
        genaratePatientID();

        /* try {
           int maxPatientCount= ctrlQuery.getMaxPatientCount(txtScheduleId.getText());
           int count=ctrlQuery.countable(txtScheduleId.getText());
           if(maxPatientCount>=count){
           txtAppNo.setText(Integer.toString(count+1));
           }
           else if(maxPatientCount==count){
            
           }
        } catch (Exception ex) {
            Logger.getLogger(AddNewPatientPanel.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }

    public void genaratePatientID() {
        try {
            txtPatientId.setText(IDGenarator.getNewID("Patient", "pID", "P"));
        } catch (SQLException ex) {
            Logger.getLogger(AddNewPatientPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddNewPatientPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTopic1 = new javax.swing.JLabel();
        lblPatientId = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        lblTelNo = new javax.swing.JLabel();
        txtPatientId = new org.jdesktop.swingx.JXTextField();
        txtPatientName = new org.jdesktop.swingx.JXTextField();
        txtPatientAdress = new org.jdesktop.swingx.JXTextField();
        cmbPatientGender = new javax.swing.JComboBox<>();
        txtPatientAge = new org.jdesktop.swingx.JXTextField();
        txtPatientTelNo = new org.jdesktop.swingx.JXTextField();
        lblTopic2 = new javax.swing.JLabel();
        lblApID = new javax.swing.JLabel();
        lblScID = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        txtAppId = new org.jdesktop.swingx.JXTextField();
        txtApDate = new org.jdesktop.swingx.JXTextField();
        lblApNo = new javax.swing.JLabel();
        txtAppNo = new org.jdesktop.swingx.JXTextField();
        btnAdd = new org.jdesktop.swingx.JXButton();
        txtScheduleId1 = new org.jdesktop.swingx.JXTextField();
        lblMessage1 = new javax.swing.JLabel();
        lblMessage2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1100, 640));

        lblTopic1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblTopic1.setText("Add Patient Details :");

        lblPatientId.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblPatientId.setText("Patient ID :");

        lblName.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblName.setText("Name :");

        lblAddress.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblAddress.setText("Address :");

        lblGender.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblGender.setText("Gender :");

        lblAge.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblAge.setText("Age :");

        lblTelNo.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblTelNo.setText("Tel No :");

        txtPatientId.setFocusable(false);

        txtPatientName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientNameActionPerformed(evt);
            }
        });

        txtPatientAdress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientAdressActionPerformed(evt);
            }
        });

        cmbPatientGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        cmbPatientGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPatientGenderActionPerformed(evt);
            }
        });

        txtPatientAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientAgeActionPerformed(evt);
            }
        });

        txtPatientTelNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientTelNoActionPerformed(evt);
            }
        });

        lblTopic2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblTopic2.setText("Appointment Details :");

        lblApID.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblApID.setText("Appointment ID :");

        lblScID.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblScID.setText("Schedule ID :");

        lblDate.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblDate.setText("Date :");

        txtAppId.setFocusable(false);

        txtApDate.setFocusable(false);

        lblApNo.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblApNo.setText("Appointment No :");

        txtAppNo.setFocusable(false);

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        txtScheduleId1.setFocusable(false);

        lblMessage1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblMessage1.setText("Tip : If you did worng in past step..?");

        lblMessage2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblMessage2.setText("        please press select search types again..");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblGender)
                                    .addGap(20, 20, 20)
                                    .addComponent(cmbPatientGender, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblTelNo)
                                    .addGap(27, 27, 27)
                                    .addComponent(txtPatientTelNo, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMessage1, javax.swing.GroupLayout.DEFAULT_SIZE, 750, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblMessage2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblDate)
                                        .addGap(78, 78, 78)
                                        .addComponent(txtApDate, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblTopic1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(lblTopic2, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPatientId)
                                .addGap(1, 1, 1)
                                .addComponent(txtPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(lblApNo)
                                .addGap(10, 10, 10)
                                .addComponent(txtAppNo, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblName)
                                .addGap(30, 30, 30)
                                .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(lblApID)
                                .addGap(15, 15, 15)
                                .addComponent(txtAppId, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblAddress)
                                .addGap(13, 13, 13)
                                .addComponent(txtPatientAdress, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47)
                                .addComponent(lblScID)
                                .addGap(38, 38, 38)
                                .addComponent(txtScheduleId1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblAge)
                                .addGap(43, 43, 43)
                                .addComponent(txtPatientAge, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTopic1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(lblTopic2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPatientId)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(txtPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(lblApNo))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(txtAppNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblName)
                    .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblApID)
                    .addComponent(txtAppId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAddress)
                    .addComponent(txtPatientAdress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblScID)
                    .addComponent(txtScheduleId1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblGender)
                    .addComponent(cmbPatientGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDate)
                    .addComponent(txtApDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAge)
                    .addComponent(txtPatientAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTelNo)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPatientTelNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblMessage1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMessage2)
                .addGap(18, 18, 18)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed

        try {
            String pid = txtPatientId.getText();
            String name = txtPatientName.getText();
            String address = txtPatientAdress.getText();
            String gender = (String) cmbPatientGender.getSelectedItem();
            int age = Integer.parseInt(txtPatientAge.getText());
            String tp = txtPatientTelNo.getText();

            PatientDTO p = new PatientDTO(pid, name, address, gender, age, tp);

            int no = Integer.parseInt(txtAppNo.getText());
            String aId = txtAppId.getText();
            String sId = txtScheduleId1.getText();
            String date = txtApDate.getText();

            AppointmentDTO ap = new AppointmentDTO(aId, pid, sId, no, date);

            boolean adWithTrance = ctrlPatient.adWithTrance(p, ap);
            if (adWithTrance) {
                JOptionPane.showMessageDialog(null, "Appointmetn is done.If you want to do payments, Click payments");
            } else {
                JOptionPane.showMessageDialog(null, "Operation failed..!");
            }
        } catch (Exception ex) {
            Logger.getLogger(AddNewPatientPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void txtPatientTelNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientTelNoActionPerformed
        String phone = txtPatientTelNo.getText();
        try {
            boolean isAdded = ctrlValidation.phoneNumberValidation(phone);
            if (isAdded) {
                //JOptionPane.showMessageDialog(this, "Correct Number");

            } else {
                JOptionPane.showMessageDialog(this, "wrong Number");
            }
        } catch (Exception ex) {
            Logger.getLogger(AddNewDoctorPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        btnAdd.requestFocus();

    }//GEN-LAST:event_txtPatientTelNoActionPerformed

    private void txtPatientNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientNameActionPerformed
      txtPatientAdress.requestFocus();
    }//GEN-LAST:event_txtPatientNameActionPerformed

    private void txtPatientAdressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientAdressActionPerformed
       cmbPatientGender.requestFocus();
    }//GEN-LAST:event_txtPatientAdressActionPerformed

    private void cmbPatientGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPatientGenderActionPerformed
      txtPatientAge.requestFocus();
    }//GEN-LAST:event_cmbPatientGenderActionPerformed

    private void txtPatientAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientAgeActionPerformed
      txtPatientTelNo.requestFocus();
    }//GEN-LAST:event_txtPatientAgeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXButton btnAdd;
    private javax.swing.JComboBox<String> cmbPatientGender;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblApID;
    private javax.swing.JLabel lblApNo;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblMessage1;
    private javax.swing.JLabel lblMessage2;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPatientId;
    private javax.swing.JLabel lblScID;
    private javax.swing.JLabel lblTelNo;
    private javax.swing.JLabel lblTopic1;
    private javax.swing.JLabel lblTopic2;
    private org.jdesktop.swingx.JXTextField txtApDate;
    private org.jdesktop.swingx.JXTextField txtAppId;
    private org.jdesktop.swingx.JXTextField txtAppNo;
    private org.jdesktop.swingx.JXTextField txtPatientAdress;
    private org.jdesktop.swingx.JXTextField txtPatientAge;
    private org.jdesktop.swingx.JXTextField txtPatientId;
    private org.jdesktop.swingx.JXTextField txtPatientName;
    private org.jdesktop.swingx.JXTextField txtPatientTelNo;
    private org.jdesktop.swingx.JXTextField txtScheduleId1;
    // End of variables declaration//GEN-END:variables
}
